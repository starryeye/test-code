plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'

	//asciidoctor plugin
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'dev.practice'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

	asciidoctorExt //asciidoctor extension
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.google.guava:guava:32.1.1-jre'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// RestDocs
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

tasks.named('test') {
	useJUnitPlatform()
}

ext { // 전역변수
	snippetsDir = file('build/generated-snippets')
}

test {
	// restdocs 를 만들기 위한 test 의 결과물을 snippetsDir 에 저장한다.
	outputs.dir snippetsDir
}

// 저장된 test 결과물로 asciidoctor 가 문서를 만들어준다.
asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'

	dependsOn test
}

// jar 파일 만들때 문서를 같이 저장해준다.
bootJar {
	dependsOn asciidoctor
	from("${asciidoctor.outputDir}") {
		into 'static/docs'
	}
}


